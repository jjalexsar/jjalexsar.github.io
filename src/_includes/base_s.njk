{% set imgs = images or page.images or [] %}

<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>{{ title }}</title>

  <style>
    /* 슬라이더 컨테이너 */
    .slider {
      position: relative;
      width: min(960px, 100%);
      margin: 1.5rem auto;
      overflow: hidden;
      border-radius: 16px;
    }
    /* 트랙(이미지들을 가로로 나열) */
    .slider-track {
      display: flex;
      transition: transform 300ms ease;
      touch-action: pan-y;
    }
    .slide {
      min-width: 100%;
      user-select: none;
    }
    .slide img {
      display: block;
      width: 100%;
      height: auto;
    }
    /* 네비게이션 버튼 */
    .slider-btn {
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      border: none;
      background: rgba(0,0,0,.4);
      color: #fff;
      width: 40px;
      height: 40px;
      border-radius: 999px;
      cursor: pointer;
    }
    .slider-btn:focus { outline: 2px solid #fff5; }
    .slider-btn.prev { left: .5rem; }
    .slider-btn.next { right: .5rem; }

    /* 인디케이터 점 */
    .dots {
      display: flex;
      gap: .5rem;
      justify-content: center;
      margin-top: .75rem;
    }
    .dot {
      width: 8px; height: 8px; border-radius: 999px;
      background: #bbb; cursor: pointer;
    }
    .dot.active { background: #333; }
  </style>
</head>
<body>

  <main class="post">
    <h1>{{ title }}</h1>

    {# 1) 이미지 슬라이더 (프론트매터 images 배열이 있을 때만) #}
    {% if imgs and imgs.length %}
    <section class="slider" id="slider">
      <div class="slider-track" id="sliderTrack" style="transform: translateX(0);">
        {% for src in imgs %}
          <figure class="slide">
            <img src="{{ src }}" alt="slide {{ loop.index }}" loading="lazy" />
          </figure>
        {% endfor %}
      </div>
      {% if imgs.length > 1 %}
        <button class="slider-btn prev" id="btnPrev" aria-label="이전">‹</button>
        <button class="slider-btn next" id="btnNext" aria-label="다음">›</button>
      {% endif %}
    </section>
    {% if imgs.length > 1 %}
      <div class="dots" id="dots">
        {% for _ in imgs %}
          <div class="dot{% if loop.first %} active{% endif %}" data-idx="{{ loop.index0 }}"></div>
        {% endfor %}
      </div>
    {% endif %}
    {% endif %}

    {# 2) 기본 본문 #}
    <article class="content">
      {{ content | safe }}
    </article>
  </main>

  {% if imgs and imgs.length > 0 %}
  <script>
    (function () {
      var track = document.getElementById('sliderTrack');
      if (!track) return;

      var slidesCount = {{ imgs.length }};
      var idx = 0;
      var startX = 0, currentX = 0, dragging = false;

      var btnPrev = document.getElementById('btnPrev');
      var btnNext = document.getElementById('btnNext');
      var dotsEl = document.getElementById('dots');
      var dots = dotsEl ? Array.from(dotsEl.querySelectorAll('.dot')) : [];

      function update() {
        track.style.transform = 'translateX(' + (-idx * 100) + '%)';
        dots.forEach(function(d, i){ d.classList.toggle('active', i === idx); });
      }
      function prev(){ idx = (idx - 1 + slidesCount) % slidesCount; update(); }
      function next(){ idx = (idx + 1) % slidesCount; update(); }

      // 버튼
      if (btnPrev) btnPrev.addEventListener('click', prev);
      if (btnNext) btnNext.addEventListener('click', next);

      // 점(인디케이터) 클릭
      if (dots.length) {
        dots.forEach(function(d){
          d.addEventListener('click', function(){
            idx = parseInt(d.dataset.idx, 10) || 0;
            update();
          });
        });
      }

      // 드래그/스와이프
      function onDown(clientX){
        dragging = true;
        startX = clientX;
        currentX = clientX;
        track.style.transition = 'none';
      }
      function onMove(clientX){
        if (!dragging) return;
        currentX = clientX;
        var delta = currentX - startX;
        var percent = (delta / track.clientWidth) * 100;
        track.style.transform = 'translateX(calc(' + (-idx * 100) + '% + ' + percent + '%))';
      }
      function onUp(){
        if (!dragging) return;
        dragging = false;
        track.style.transition = 'transform 300ms ease';
        var delta = currentX - startX;
        var threshold = track.clientWidth * 0.2;
        if (delta > threshold) { prev(); }
        else if (delta < -threshold) { next(); }
        else { update(); }
      }

      // 마우스
      track.addEventListener('mousedown', function(e){ onDown(e.clientX); });
      window.addEventListener('mousemove', function(e){ onMove(e.clientX); });
      window.addEventListener('mouseup', onUp);

      // 터치
      track.addEventListener('touchstart', function(e){ onDown(e.touches[0].clientX); }, {passive: true});
      track.addEventListener('touchmove', function(e){ onMove(e.touches[0].clientX); }, {passive: true});
      track.addEventListener('touchend', onUp);

      // 키보드(좌우)
      window.addEventListener('keydown', function(e){
        if (e.key === 'ArrowLeft') prev();
        if (e.key === 'ArrowRight') next();
      });

      // 초기 렌더
      update();
    })();
  </script>
  {% endif %}
</body>
</html>
